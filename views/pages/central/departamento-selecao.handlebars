<style>
  .row input.form-control {
    height: 30px; /* ou menos, ex: 28px */
    font-size: 14px;
    padding: 2px 6px;
    color:blue ;
  }

  .row label {
    font-size: 14px;
    margin-bottom: 2px;
    line-height: 1.2;
    color: blue;
  }

  .row {
    margin-bottom: 5px;
  }
</style>
<style>
    .gravaSubmit{
      padding-left: 10px;
      width: 95%;
      margin: auto;
      background-color: #ffffff;
    }
    
</style>
<div id="cadastroLojistaModal" style="display:block; position:fixed; top:7.2vh; left:0; width:100%; height:100%; background:#bbbcbb80; justify-content:center; align-items:center;padding: 5px;">
        <div style="background:#fff; width:50%; height:92vh;margin: auto;padding:10px; border-radius:10px; box-shadow:0 5px 10px #00000080;overflow-x: scroll;overflow-y: auto;">
            <h4 style="font-weight: 200;color: #141414;">Cadastro de Lojista</h4>
            <div id="divForm" style="background-color:transparent;height:90vh ;">
                <form id="cadastroLojistaForm" class="gravaSubmit" method="POST" action="/lojista/gravar">
                        <input type="hidden" id="editId" name="_id">
                        <div class="row">
                            <label>Razao:</label>
                            <input type="text" id="inputrazao" name="inputrazao" class="form-control">
                        </div>
                        <div class="row">
                            <label>Responsável:</label>
                            <input type="text" id="responsavel" name="responsavel" class="form-control">
                        </div>
                        <div class="row">
                            <label>CPF:</label>
                            <input type="text" id="cpf" name="cpf" class="form-control">
                        </div>
                        <div class="row">
                            <label>CNPJ:</label>
                            <input type="text" id="cnpj" name="cnpj" class="form-control">
                        </div>
                        <div class="row">
                            <label>Inscrição:</label>
                            <input type="text" id="inscricao" name="inscricao" class="form-control">
                        </div>
                        <div class="row">
                            <label>Site:</label>
                            <input type="text" id="site" name="site" class="form-control">
                        </div>
                        <div class="row">
                            <label>Marca:</label>
                            <input type="text" id="marca" name="marca" class="form-control">
                        </div>
                        <div class="row">
                            <label>Celular:</label>
                            <input type="text" id="celular" name="celular" class="form-control">
                        </div>
                        <div class="row">
                            <label>Fone:</label>
                            <input type="text" id="fone" name="fone" class="form-control">
                        </div>
                        <div class="row">
                            <label>Email:</label>
                            <input type="email" id="email" name="email" class="form-control">
                        </div>
                        <div class="row">
                            <label>Senha:</label>
                            <input type="password" id="senha" name="senha" class="form-control">
                        </div>
                        <div class="row">
                            <label>Cep:</label>
                            <input type="text" id="cep" name="cep" class="form-control">
                        </div>
                        <div class="row">
                            <label>Logradouro:</label>
                            <input type="text" id="logradouro" name="logradouro" class="form-control">
                        </div>
                        <div class="row">
                            <label>Complemento:</label>
                            <input type="text" id="complemento" name="complemento" class="form-control">
                        </div>
                        <div class="row">
                            <label>Bairro:</label>
                            <input type="text" id="bairro" name="bairro" class="form-control">
                        </div>
                        <div class="row">
                            <label>Cidade:</label>
                            <input type="text" id="cidade" name="cidade" class="form-control">
                        </div>
                        <div class="row">
                            <label>Estado:</label>
                            <input type="text" id="estado" name="estado" class="form-control" >
                        </div>
                        {{!-- ///////////////////////////////////////////////////////////////////////// --}}
                        <!-- Lista dos departamentos selecionados (pode ser antes visualmente) -->
                        <div class="row">
                            <label>Departamentos selecionados:</label>
                              <ul id="listaDepartamentosSelecionados" style="padding-left: 1rem;background-color: blueviolet;color:#ffffff;text-align: right;"></ul>
                            </div>

                            <div class="row">
                            <label>Escolher departamento:</label>
                            <div class="grupo-depto" style="display: flex; gap: 10px; align-items: center;">
                                <select id="selectDepartamento" class="form-control select-departamento" style="width: 20vw;">
                                <option value="">Selecione um departamento</option>
                                </select>
                            </div>
                            </div>
                        {{!-- ///////////////////////////////////////////////////////////////////////// --}}
                        <div class="row" style="height: 4vh;background-color:#0d0d0d ;margin-bottom: .5vh;margin-top: 4vh;">
                      
                        </div>
                        <div class="row" style="display:flex;flex-direction: row;justify-content:space-around;background-color: transparent;">
                            <button type="button" class="btn btn-secondary" style="width: 30%;" onclick="closeCadastroModal()">Cancelar</button>
                            <button type="submit" class="btn btn-primary" style="width: 30%;">Salvar</button>
                        </div>
                </form>
            </div>
        </div>
</div>

<!-- HTML: Campos para selecionar departamentos e exibir os escolhidos em <ul> -->


<script>
  // Variável que armazena todos os departamentos
  let listaDepartamentos = [];

  // Quando a razão social receber foco, carrega os departamentos uma única vez
  let jaCarregouDepartamentos = false;
  document.getElementById("inputrazao").addEventListener("focus", async () => {
    if (jaCarregouDepartamentos) return;
    try {
      const res = await fetch("/segmento/selectlista");
      listaDepartamentos = await res.json();
      preencherSelect();
      jaCarregouDepartamentos = true;
    } catch (err) {
      console.error("Erro ao carregar departamentos:", err);
    }
  });

  // Preenche o <select> com departamentos que ainda não foram selecionados
  function preencherSelect() {
    const select = document.querySelector(".select-departamento");
    const ul = document.getElementById("listaDepartamentosSelecionados");
    const selecionados = Array.from(ul.querySelectorAll("li")).map(li => li.dataset.id);

    // Limpa o select antes de preencher
    select.innerHTML = '<option value="">Selecione um departamento</option>';

    listaDepartamentos.forEach(dep => {
      const isSelecionado = selecionados.includes(dep._id);
      if (!isSelecionado) {
        const opt = document.createElement("option");
        opt.value = dep._id;
        opt.textContent = dep.nomeDepartamento;
        select.appendChild(opt);
      }
    });
  }

  // Quando o usuário seleciona um departamento, adiciona no <ul> e remove do <select>
  document.querySelector(".select-departamento").addEventListener("change", function () {
    const selectedId = this.value;
    if (!selectedId) return;

    const dep = listaDepartamentos.find(d => d._id === selectedId);
    if (!dep) return;

    const ul = document.getElementById("listaDepartamentosSelecionados");

    // Cria o <li> com nome e ID
    const li = document.createElement("li");
    li.textContent = dep.nomeDepartamento;
    li.dataset.id = dep._id;
    ul.appendChild(li);

    // Reseta o <select>
    this.value = "";

    // Atualiza as opções disponíveis
    preencherSelect();
  });
</script>

<script>
    document.getElementById("cadastroLojistaForm").addEventListener("submit", function (e) {
        console.log(' [ 187]')
        const ul = document.getElementById("listaDepartamentosSelecionados");
        const form = this;
        console.log('[ 192 ]')
        alert('[ 202 ] addEventListener("submit"')
        // Remove previamente criados (evita duplicação ao submeter duas vezes)
        document.querySelectorAll("input[name='departamentos_ids[]']").forEach(el => el.remove());

        // Para cada <li> com data-id, criamos um input hidden
        ul.querySelectorAll("li[data-id]").forEach(li => {
            const input = document.createElement("input");
            input.type = "hidden";
            input.name = "departamentos_ids[]";
            input.value = li.dataset.id;
            form.appendChild(input);
        });

        form.submit();
    });
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".row input").forEach((input) => {
      input.addEventListener("keydown", function (e) {
        if (e.key === "Enter") {
          e.preventDefault();

          if (e.target.value.trim() === "") {
            e.target.style.border = "2px solid red"; // Opcional: destacar vazio
            return; // Não continua para o próximo input
          } else {
            e.target.style.border = ""; // Remove o destaque se estava
          }

          const allInputs = Array.from(document.querySelectorAll(".row input"));
          const currentIndex = allInputs.indexOf(e.target);
          const currentRow = allInputs[currentIndex];

          currentRow.style.backgroundColor = "red";
          currentRow.style.color = "#fff";

          const nextInput = allInputs[currentIndex + 1];
          if (nextInput) {
            nextInput.style.backgroundColor = "yellow";
            nextInput.focus();
          }
        }
      });
    });
  });
</script>

//{{!-- BUSCA CEP API:VIACEP --}}
<script>
    async function buscarEnderecoPorCep(cep) {
          try {
            console.log(cep)
            const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);
            if (!response.ok) throw new Error("Erro na consulta do CEP");

            const dados = await response.json();

            if (dados.erro) {
              alert("CEP não encontrado");
              return null;
            }

            return dados;
          } catch (err) {
            console.error("Erro ao buscar CEP:", err);
            alert("Falha ao buscar o CEP");
            return null;
          }
    }

    document.getElementById("cep").addEventListener("keydown", async function (e) {
      if (e.key === "Enter") {
        e.preventDefault(); // Evita submit se estiver dentro de um form
        const cep = this.value.replace(/\D/g, "");

        if (cep.length === 8) {
          const endereco = await buscarEnderecoPorCep(cep);
          console.log('');
          console.log(endereco);
          console.log('');
          if (endereco) {
            console.log(' [ 271 ]')
            document.getElementById("logradouro").value = endereco.logradouro || "";
            document.getElementById("bairro").value = endereco.bairro || "";
            document.getElementById("bairro").style.backgroundColor="red";
            document.getElementById("cidade").value = endereco.localidade || "";
            document.getElementById("cidade").style.backgroundColor="red";
            document.getElementById("estado").style.backgroundColor="red";
            document.getElementById("estado").value = endereco.estado || "";
            document.getElementById("logradouro").style.backgroundColor="red";
            document.getElementById("logradouro").style.color="white";
            document.getElementById("complemento").focus();
            
            // Pode preencher outros campos aqui também, ex:
            // console.log(endereco);
          }
        } else {
          alert("CEP inválido. Digite 8 números.");
        }
      }
});
</script>

//{{!-- HÀ DUVIDAS SOBRE ESSE COMPORTAMENTO --}}
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const estadoInput = document.getElementById("estado");
    const departamentoSelect = document.querySelector("#departamentSelect select-departamento");

    estadoInput.addEventListener("keydown", function (e) {
      if (e.key === "Enter") {
        e.preventDefault();
        departamentoSelect.style.backgroundColor="red";
        departamentoSelect.style.color="white";
        departamentoSelect.focus();
      }
    });
  });
</script>
<script>
    // Middleware para extrair departamentos da UL
function extrairDepartamentosSelecionados(req) {
  console.log(' [ 170 ] extrairDepartamentosSelecionados')
  const lista = [];
  if (req.body.departamentos_ids && Array.isArray(req.body.departamentos_ids)) {
    return req.body.departamentos_ids;
  } else if (typeof req.body.departamentos_ids === "string") {
    // caso seja um único id enviado
    return [req.body.departamentos_ids];
  }
  return lista;
}
</script>